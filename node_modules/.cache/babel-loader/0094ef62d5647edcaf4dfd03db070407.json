{"remainingRequest":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\src\\views\\BlogEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\src\\views\\BlogEdit.vue","mtime":1628999831692},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626597476611},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1626597517077},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626597476611},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1626597510143}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Header from \"../components/Header\";\nexport default {\n  name: \"BlogEdit\",\n  components: {\n    Header: Header\n  },\n  data: function data() {\n    return {\n      preContent: '',\n      userId: null,\n      validateUser: false,\n      ruleForm: {\n        id: null,\n        title: '',\n        description: '',\n        content: ''\n      },\n      rules: {\n        title: [{\n          required: true,\n          message: 'Please enter title.',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          message: 'Title length should be  3 to 35 bytes',\n          trigger: 'blur'\n        }],\n        description: [{\n          required: true,\n          message: 'Please enter description.',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          message: 'Description two short!! At least 5 bytes.',\n          trigger: 'blur'\n        }],\n        content: [{\n          required: true,\n          message: 'Please enter content.',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          message: 'Content two short!!At least 5 bytes.',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this2 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var _this = _this2;\n\n          _this2.$axios.post('/blog/edit', _this.ruleForm, {\n            headers: {\n              \"Authorization\": _this.$store.state.token\n            }\n          }).then(function (res) {\n            _this2.$alert('保存成功！', '提示', {\n              confirmButtonText: 'OK',\n              callback: function callback(action) {\n                _this.$router.push(\"/blogs\");\n              }\n            });\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    imgAdd: function imgAdd(pos, $file) {\n      // 第一步.将图片上传到服务器.\n      var formdata = new FormData();\n      formdata.append('file', $file);\n\n      var _this = this;\n\n      this.$axios({\n        url: 'api/md/upload',\n        method: 'post',\n        data: formdata,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(function (res) {\n        // 第二步.将返回的url替换到文本原位置![...](0) -> ![...](url)\n        console.log(\"res:\" + res.data);\n        var url = res.data.data;\n\n        _this.$refs.md.$imglst2Url([[pos, url]]);\n      });\n    },\n    imgDel: function imgDel(pos) {},\n    changeContent: function changeContent(value, render) {//自动保存\n    },\n    uploadMdSuccess: function uploadMdSuccess(res) {\n      console.log(\"res:\" + res.data);\n      this.preContent = this.ruleForm.content;\n      this.ruleForm.content = res.data;\n    },\n    handlePreview: function handlePreview() {},\n    handleRemove: function handleRemove() {\n      this.ruleForm.content = this.preContent;\n    }\n  },\n  created: function created() {\n    var _this3 = this;\n\n    var _this = this;\n\n    var blogId = this.$route.params.blogId;\n\n    if (blogId) {\n      this.$axios.get('/blog/' + blogId).then(function (res) {\n        var blog = res.data.data;\n        _this.ruleForm.id = blogId;\n        _this.ruleForm.title = blog.title;\n        _this.ruleForm.description = blog.description;\n        _this.ruleForm.content = blog.content;\n        _this.userId = blog.userId;\n\n        if (_this.userId) {\n          if (_this3.$store.state.userInfo.id === _this3.userId) {\n            _this3.validateUser = false;\n          } else {\n            _this3.validateUser = true;\n          }\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["BlogEdit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <Header></Header>\r\n        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n            <el-form-item label=\"标题\" prop=\"title\">\r\n                <el-input v-model=\"ruleForm.title\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"描述\" prop=\"description\">\r\n                <el-input v-model=\"ruleForm.description\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"内容\" prop=\"content\">\r\n                <el-upload\r\n                        class=\"upload-demo\"\r\n                        action=\"http://localhost:8090/api/md/convert2String\"\r\n                        :on-preview=\"handlePreview\"\r\n                        :on-remove=\"handleRemove\"\r\n                        :on-success=\"uploadMdSuccess\"\r\n                        :auto-upload=\"true\">\r\n                        <el-link icon=\"el-icon-document\"\r\n                             :disabled=\"validateUser\"\r\n                                 slot=\"trigger\"\r\n                    >上传本地Markdown</el-link>\r\n                    <!--<el-button slot=\"trigger\" size=\"small\" type=\"primary\">选取文件</el-button>--><!--@click=\"uploadMd\"-->\r\n                </el-upload>\r\n\r\n                <mavon-editor ref=md v-model=\"ruleForm.content\" @imgAdd=\"imgAdd\" @imgDel=\"imgDel\"\r\n                    @change=\"changeContent\"\r\n                ></mavon-editor>\r\n            </el-form-item>\r\n            <el-form-item >\r\n                <el-button type=\"primary\" @click=\"submitForm('ruleForm')\" :disabled=\"validateUser\">保存</el-button>\r\n                <el-button @click=\"resetForm('ruleForm')\" :disabled=\"validateUser\">重置</el-button>\r\n                <span v-show=\"validateUser\" style=\"margin-left: 35px; color: red\">It's not your blogs. You don't have right to edit it.</span>\r\n            </el-form-item>\r\n        </el-form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Header from \"../components/Header\";\r\n    export default {\r\n        name: \"BlogEdit\",\r\n        components: {Header},\r\n        data(){\r\n            return {\r\n                preContent:'',\r\n                userId:null,\r\n                validateUser:false,\r\n                ruleForm: {\r\n                    id:null,\r\n                    title: '',\r\n                    description: '',\r\n                    content:''\r\n                },\r\n                rules: {\r\n                    title: [\r\n                        { required: true, message: 'Please enter title.', trigger: 'blur' },\r\n                        { min: 5, message: 'Title length should be  3 to 35 bytes', trigger: 'blur' }\r\n                    ],\r\n                    description: [\r\n                        { required: true, message: 'Please enter description.', trigger: 'blur' },\r\n                        { min: 5, message: 'Description two short!! At least 5 bytes.', trigger: 'blur' }\r\n                    ],\r\n                    content: [\r\n                        { required: true, message: 'Please enter content.', trigger: 'blur' },\r\n                        { min: 5, message: 'Content two short!!At least 5 bytes.', trigger: 'blur' }\r\n                    ],\r\n            }\r\n        }\r\n    },  methods: {\r\n            submitForm(formName) {\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        const _this = this\r\n                        this.$axios.post('/blog/edit', _this.ruleForm, {\r\n\r\n                            headers:{\r\n                                \"Authorization\":_this.$store.state.token\r\n                            }\r\n                        }).then(res => {\r\n                            this.$alert('保存成功！', '提示', {\r\n                                confirmButtonText: 'OK',\r\n                                callback: action => {\r\n                                    _this.$router.push(\"/blogs\")\r\n                                }\r\n                            });\r\n                        })\r\n\r\n                    } else {\r\n                        console.log('error submit!!');\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n            resetForm(formName) {\r\n                this.$refs[formName].resetFields();\r\n            },\r\n            imgAdd(pos, $file){\r\n                // 第一步.将图片上传到服务器.\r\n                var formdata = new FormData()\r\n                formdata.append('file', $file)\r\n                let _this = this\r\n                this.$axios({\r\n                    url: 'api/md/upload',\r\n                    method: 'post',\r\n                    data: formdata,\r\n                    headers: { 'Content-Type': 'multipart/form-data' },\r\n                }).then((res) => {\r\n                    // 第二步.将返回的url替换到文本原位置![...](0) -> ![...](url)\r\n                    console.log(\"res:\"+res.data)\r\n                    let url = res.data.data\r\n                    _this.$refs.md.$imglst2Url([[pos, url]])\r\n                })\r\n            },\r\n            imgDel(pos) {\r\n\r\n            },\r\n            changeContent(value, render) {\r\n                //自动保存\r\n            },\r\n            uploadMdSuccess(res) {\r\n                console.log(\"res:\"+res.data)\r\n                this.preContent = this.ruleForm.content\r\n                this.ruleForm.content = res.data\r\n            },\r\n            handlePreview() {\r\n\r\n            },\r\n            handleRemove() {\r\n                this.ruleForm.content = this.preContent\r\n            }\r\n        },\r\n        created() {\r\n            const _this = this\r\n            const blogId = this.$route.params.blogId\r\n            if (blogId) {\r\n                this.$axios.get('/blog/'+blogId).then(res => {\r\n                    const blog = res.data.data\r\n                    _this.ruleForm.id = blogId\r\n                    _this.ruleForm.title = blog.title\r\n                    _this.ruleForm.description = blog.description\r\n                    _this.ruleForm.content = blog.content\r\n                    _this.userId = blog.userId\r\n                    if (_this.userId) {\r\n                        if (this.$store.state.userInfo.id === this.userId) {\r\n                            this.validateUser = false;\r\n                        } else {\r\n                            this.validateUser = true;\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views"}]}