{"remainingRequest":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\src\\views\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\src\\views\\Register.vue","mtime":1628994575736},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626597476611},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1626597517077},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626597476611},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1626597510143}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    var _this2 = this;\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      console.log(value);\n      console.log(_this2.ruleForm.password);\n\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this2.ruleForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      isUploadAvatar: false,\n      ruleForm: {\n        username: '',\n        password: '',\n        rePassword: '',\n        email: '',\n        avatar: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: 'Please enter Username',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 15,\n          message: 'Length should be 3 to 15 bytes',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'Please enter Password',\n          trigger: 'blur'\n        },\n        /*{ min: 6, max: 15, message: 'Length should be 3 to 15 bytes', trigger: 'blur' }*/\n        {\n          pattern: /^(?![a-zA-Z]+$)(?![A-Z0-9]+$)(?![A-Z\\W_]+$)(?![a-z0-9]+$)(?![a-z\\W_]+$)(?![0-9\\W_]+$)[a-zA-Z0-9\\W_]{8,30}$/,\n          message: '密码为数字、大小写字母和特殊符号至少包含三种，长度为8-30位'\n        }],\n        email: [{\n          required: true,\n          message: 'Please enter Email',\n          trigger: 'blur'\n        }, {\n          pattern: /^([a-zA-Z]|[0-9])(\\w|\\-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/,\n          message: 'email wrong pattern'\n        }],\n        rePassword: [{\n          required: true,\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      },\n      fileList: [{\n        name: '',\n        url: ''\n      }]\n    };\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this3 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var _this = _this3;\n\n          _this3.$axios.post('/register', _this3.ruleForm).then(function (res) {\n            var jwt = res.headers['authorization'];\n            var userInfo = res.data.data;\n\n            _this.$store.commit(\"SET_TOKEN\", jwt);\n\n            _this.$store.commit(\"SET_USERINFO\", userInfo);\n\n            _this.$router.push(\"/blogs\");\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    submitUpload: function submitUpload() {\n      console.log(\"submit!\");\n    },\n    handleRemove: function handleRemove(file, fileList) {\n      this.ruleForm.avatar = '';\n      this.isUploadAvatar = false;\n    },\n    handlePreview: function handlePreview(file) {\n      console.log(file);\n    },\n    handleAvatarSuccess: function handleAvatarSuccess(res) {\n      this.ruleForm.avatar = res.data;\n      this.isUploadAvatar = true;\n    }\n  }\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <el-container>\r\n            <el-header>\r\n                <img src=\"../assets/login-head.png\" class=\"login-head\">\r\n            </el-header>\r\n            <el-main class=\"m-container\">\r\n                <div class=\"login-header\">\r\n                    <el-avatar icon=\"el-icon-user-solid\" :size=\"50\" :src='ruleForm.avatar'></el-avatar>\r\n                    <!--<div class=\"login-head-div\">Sign up to Yoghurt.</div>-->\r\n                    <span class=\"login-head-div\">Sign up to Yoghurt.</span>\r\n                </div>\r\n                <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n                    <el-form-item label=\"Email\" prop=\"email\">\r\n                        <el-input type=\"email\" v-model=\"ruleForm.email\" placeholder=\"Email will be your AccountID\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"Password\" prop=\"password\">\r\n                        <el-input type=\"password\" v-model=\"ruleForm.password\" placeholder=\"Please enter password\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"RePassword\" prop=\"rePassword\">\r\n                        <el-input type=\"password\" v-model=\"ruleForm.rePassword\" placeholder=\"Please enter password again\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"Username\" prop=\"username\">\r\n                        <el-input v-model=\"ruleForm.username\" placeholder=\"Please enter username\"></el-input>\r\n                    </el-form-item>\r\n                    <div class=\"warning\" v-show=\"!isUploadAvatar\">please upload avatar!</div>\r\n                    <el-form-item class=\"el-form-item-button\">\r\n                        <el-upload\r\n                                class=\"upload-demo\"\r\n                                ref=\"upload\"\r\n                                action=\"http://localhost:8090/upload\"\r\n                                :on-preview=\"handlePreview\"\r\n                                :on-remove=\"handleRemove\"\r\n                                :on-success=\"handleAvatarSuccess\"\r\n                                :auto-upload=\"true\"\r\n                                :click=\"submitUpload\"\r\n                        ><el-button slot=\"trigger\" size=\"small\" type=\"primary\">select avatar</el-button></el-upload>\r\n                        <!--<el-button @click=\"uploadAvatar\">uploadAvatar</el-button>-->\r\n                        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\" :disabled=\"!isUploadAvatar\">Sign up</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </el-main>\r\n        </el-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            var validatePass2 = (rule, value, callback) => {\r\n                console.log(value)\r\n                console.log(this.ruleForm.password)\r\n                if (value === '') {\r\n                    callback(new Error('请再次输入密码'))\r\n                } else if (value !== this.ruleForm.password) {\r\n                    callback(new Error('两次输入密码不一致!'))\r\n                } else {\r\n                    callback()\r\n                }\r\n            }\r\n            return {\r\n                isUploadAvatar:false,\r\n                ruleForm: {\r\n                    username: '',\r\n                    password: '',\r\n                    rePassword:'',\r\n                    email: '',\r\n                    avatar: ''\r\n                },\r\n                rules: {\r\n                    username: [\r\n                        { required: true, message: 'Please enter Username', trigger: 'blur' },\r\n                        { min: 3, max: 15, message: 'Length should be 3 to 15 bytes', trigger: 'blur' }\r\n                    ],\r\n                    password: [\r\n                        { required: true, message: 'Please enter Password', trigger: 'blur' },\r\n                        /*{ min: 6, max: 15, message: 'Length should be 3 to 15 bytes', trigger: 'blur' }*/\r\n                        { pattern: /^(?![a-zA-Z]+$)(?![A-Z0-9]+$)(?![A-Z\\W_]+$)(?![a-z0-9]+$)(?![a-z\\W_]+$)(?![0-9\\W_]+$)[a-zA-Z0-9\\W_]{8,30}$/, message: '密码为数字、大小写字母和特殊符号至少包含三种，长度为8-30位' }\r\n                    ],\r\n                    email: [\r\n                        { required: true, message: 'Please enter Email', trigger: 'blur' },\r\n                        { pattern:/^([a-zA-Z]|[0-9])(\\w|\\-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/, message: 'email wrong pattern'}\r\n                    ],\r\n                    rePassword: [\r\n                        { required: true, validator: validatePass2, trigger: 'blur' }\r\n                    ]\r\n                },\r\n                fileList: [\r\n                    {\r\n                        name: '',\r\n                        url: ''\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        methods:{\r\n            submitForm(formName) {\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        let _this = this;\r\n                        this.$axios.post('/register', this.ruleForm).then(res => {\r\n\r\n                            const jwt = res.headers['authorization']\r\n                            const userInfo = res.data.data;\r\n\r\n                            _this.$store.commit(\"SET_TOKEN\", jwt)\r\n                            _this.$store.commit(\"SET_USERINFO\", userInfo)\r\n                            _this.$router.push(\"/blogs\")\r\n\r\n                        })\r\n                    } else {\r\n                        console.log('error submit!!');\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n            submitUpload() {\r\n                console.log(\"submit!\")\r\n            },\r\n            handleRemove(file, fileList) {\r\n                this.ruleForm.avatar = ''\r\n                this.isUploadAvatar = false\r\n            },\r\n            handlePreview(file) {\r\n                console.log(file);\r\n            },\r\n            handleAvatarSuccess(res) {\r\n                this.ruleForm.avatar = res.data\r\n                this.isUploadAvatar = true\r\n            }\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .m-container {\r\n        text-align: center;\r\n        max-width: 960px;\r\n    }\r\n\r\n    .el-header {\r\n        background-color: white;\r\n        color: white;\r\n        text-align: center;\r\n        line-height: 60px;\r\n        height: 200px;\r\n    }\r\n    .el-main {\r\n        background-color: white;\r\n        color: #333;\r\n        text-align: center;\r\n        width: 500px;\r\n        margin: 0 auto;\r\n        /*line-height: 160px;*/\r\n    }\r\n\r\n    demo-ruleForm > el-form-item-button {\r\n        margin-left: -10px;\r\n    }\r\n\r\n\r\n    .login-head {\r\n        height: 100%;\r\n    }\r\n\r\n    .login-header {\r\n        color: black;\r\n        height: 50px;\r\n        margin-bottom: 10px;\r\n    }\r\n    .login-head-div {\r\n        height: 100%;\r\n        font-size: large;\r\n        font-weight: bold;\r\n        font-style:oblique;\r\n        margin-left: 20px;\r\n    }\r\n    .warning {\r\n        color: red;\r\n        font-size: medium;\r\n        font-style: oblique;\r\n        margin-top: -10px;\r\n        margin-bottom: 10px;\r\n        margin-left: 70px;\r\n    }\r\n</style>"],"sourceRoot":"src/views"}]}