{"remainingRequest":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\src\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\src\\views\\Login.vue","mtime":1628331736789},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626597476611},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1626597517077},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626597476611},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1626597510143}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      ruleForm: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: 'Please enter Username',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 15,\n          message: 'Length should be 3 to 15 bytes',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'Please enter Username',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 15,\n          message: 'Length should be 3 to 15 bytes',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this2 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var _this = _this2;\n\n          _this2.$axios.post('/login', _this2.ruleForm).then(function (res) {\n            var jwt = res.headers['authorization'];\n            var userInfo = res.data.data;\n            console.log(userInfo);\n            console.log(jwt);\n            console.log(\"----------------\");\n\n            _this.$store.commit(\"SET_TOKEN\", jwt);\n\n            _this.$store.commit(\"SET_USERINFO\", userInfo);\n\n            console.log(_this.$store.state.userInfo);\n            console.log(_this.$store.state.token);\n\n            _this.$router.push(\"/blogs\");\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA;AAFA,OADA;AAKA,MAAA,KAAA,EAAA;AACA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,uBAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA,EAAA;AAAA,UAAA,OAAA,EAAA,gCAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA,CADA;AAKA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,uBAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA,EAAA;AAAA,UAAA,OAAA,EAAA,gCAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA;AALA;AALA,KAAA;AAgBA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,QADA,EACA;AAAA;;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,KAAA,GAAA,MAAA;;AAIA,UAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA,MAAA,CAAA,QAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AAEA,gBAAA,GAAA,GAAA,GAAA,CAAA,OAAA,CAAA,eAAA,CAAA;AACA,gBAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AAEA,YAAA,OAAA,CAAA,GAAA,CAAA,kBAAA;;AACA,YAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,WAAA,EAAA,GAAA;;AACA,YAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,cAAA,EAAA,QAAA;;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,KAAA;;AACA,YAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AAIA,WAhBA;AAmBA,SAxBA,MAwBA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,gBAAA;AACA,iBAAA,KAAA;AACA;AACA,OA7BA;AA8BA,KAhCA;AAiCA,IAAA,SAjCA,qBAiCA,QAjCA,EAiCA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,WAAA;AACA;AAnCA;AAnBA,CAAA","sourcesContent":["<template>\r\n    <div >\r\n        <el-container>\r\n            <el-header>\r\n                <img src=\"../assets/login-head.png\" class=\"login-head\">\r\n            </el-header>\r\n            <el-main class=\"m-container\">\r\n                <div class=\"login-header\">\r\n                    <div class=\"login-head-div\">Sign in to Yoghurt.</div>\r\n                </div>\r\n                <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n                    <el-form-item label=\"Username\" prop=\"username\">\r\n                        <el-input v-model=\"ruleForm.username\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"Password\" prop=\"password\">\r\n                        <el-input type=\"password\" v-model=\"ruleForm.password\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item class=\"el-form-item-button\">\r\n                        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">Sign in</el-button>\r\n                        <el-button @click=\"resetForm('ruleForm')\">Reset</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </el-main>\r\n        </el-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                ruleForm: {\r\n                    username: '',\r\n                    password: '',\r\n                },\r\n                rules: {\r\n                    username: [\r\n                        { required: true, message: 'Please enter Username', trigger: 'blur' },\r\n                        { min: 3, max: 15, message: 'Length should be 3 to 15 bytes', trigger: 'blur' }\r\n                    ],\r\n                    password: [\r\n                        { required: true, message: 'Please enter Username', trigger: 'blur' },\r\n                        { min: 6, max: 15, message: 'Length should be 3 to 15 bytes', trigger: 'blur' }\r\n                    ]\r\n                }\r\n            };\r\n        },\r\n        methods: {\r\n            submitForm(formName) {\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        let _this = this;\r\n\r\n\r\n\r\n                        this.$axios.post('/login', this.ruleForm).then(res => {\r\n\r\n                            const jwt = res.headers['authorization']\r\n                            const userInfo = res.data.data;\r\n                            console.log(userInfo);\r\n                            console.log(jwt);\r\n\r\n                            console.log(\"----------------\")\r\n                            _this.$store.commit(\"SET_TOKEN\", jwt)\r\n                            _this.$store.commit(\"SET_USERINFO\", userInfo)\r\n                            console.log(_this.$store.state.userInfo)\r\n                            console.log(_this.$store.state.token)\r\n                            _this.$router.push(\"/blogs\")\r\n\r\n\r\n\r\n                        })\r\n\r\n\r\n                    } else {\r\n                        console.log('error submit!!');\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n            resetForm(formName) {\r\n                this.$refs[formName].resetFields();\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .m-container {\r\n        text-align: center;\r\n        max-width: 960px;\r\n    }\r\n\r\n    .el-header {\r\n        background-color: white;\r\n        color: white;\r\n        text-align: center;\r\n        line-height: 60px;\r\n        height: 200px;\r\n    }\r\n    .el-main {\r\n        background-color: white;\r\n        color: #333;\r\n        text-align: center;\r\n        width: 500px;\r\n        margin: 0 auto;\r\n        /*line-height: 160px;*/\r\n    }\r\n\r\n    demo-ruleForm > el-form-item-button {\r\n        margin-left: -10px;\r\n    }\r\n\r\n\r\n    .login-head {\r\n        height: 100%;\r\n    }\r\n\r\n    .login-header {\r\n        color: black;\r\n        height: 50px;\r\n        margin-bottom: 10px;\r\n    }\r\n    .login-head-div {\r\n        height: 100%;\r\n        font-size: large;\r\n        font-weight: bold;\r\n        font-style:oblique;\r\n        padding-top: 10px;\r\n    }\r\n</style>"],"sourceRoot":"src/views"}]} /*line-height: 160px;*/\r\n    }\r\n\r\n    demo-ruleForm > el-form-item-button {\r\n        margin-left: -10px;\r\n    }\r\n\r\n\r\n    .login-head {\r\n        height: 100%;\r\n    }\r\n\r\n    .login-header {\r\n        color: black;\r\n        height: 50px;\r\n        margin-bottom: 10px;\r\n    }\r\n    .login-head-div {\r\n        height: 100%;\r\n        font-size: large;\r\n        font-weight: bold;\r\n        font-style:oblique;\r\n        padding-top: 10px;\r\n    }\r\n</style>"],"sourceRoot":"src/views"}]}