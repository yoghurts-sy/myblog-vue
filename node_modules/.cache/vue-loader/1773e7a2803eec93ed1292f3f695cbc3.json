{"remainingRequest":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\src\\views\\Register.vue?vue&type=template&id=63ae9146&scoped=true&","dependencies":[{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\src\\views\\Register.vue","mtime":1628994575736},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626597476611},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1626597510219},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626597476611},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1626597510143}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"el-container\",\n        [\n          _c(\"el-header\", [\n            _c(\"img\", {\n              staticClass: \"login-head\",\n              attrs: { src: require(\"../assets/login-head.png\") }\n            })\n          ]),\n          _c(\n            \"el-main\",\n            { staticClass: \"m-container\" },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"login-header\" },\n                [\n                  _c(\"el-avatar\", {\n                    attrs: {\n                      icon: \"el-icon-user-solid\",\n                      size: 50,\n                      src: _vm.ruleForm.avatar\n                    }\n                  }),\n                  _c(\"span\", { staticClass: \"login-head-div\" }, [\n                    _vm._v(\"Sign up to Yoghurt.\")\n                  ])\n                ],\n                1\n              ),\n              _c(\n                \"el-form\",\n                {\n                  ref: \"ruleForm\",\n                  staticClass: \"demo-ruleForm\",\n                  attrs: {\n                    model: _vm.ruleForm,\n                    rules: _vm.rules,\n                    \"label-width\": \"100px\"\n                  }\n                },\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"Email\", prop: \"email\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: {\n                          type: \"email\",\n                          placeholder: \"Email will be your AccountID\"\n                        },\n                        model: {\n                          value: _vm.ruleForm.email,\n                          callback: function($$v) {\n                            _vm.$set(_vm.ruleForm, \"email\", $$v)\n                          },\n                          expression: \"ruleForm.email\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"Password\", prop: \"password\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: {\n                          type: \"password\",\n                          placeholder: \"Please enter password\"\n                        },\n                        model: {\n                          value: _vm.ruleForm.password,\n                          callback: function($$v) {\n                            _vm.$set(_vm.ruleForm, \"password\", $$v)\n                          },\n                          expression: \"ruleForm.password\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"RePassword\", prop: \"rePassword\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: {\n                          type: \"password\",\n                          placeholder: \"Please enter password again\"\n                        },\n                        model: {\n                          value: _vm.ruleForm.rePassword,\n                          callback: function($$v) {\n                            _vm.$set(_vm.ruleForm, \"rePassword\", $$v)\n                          },\n                          expression: \"ruleForm.rePassword\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"Username\", prop: \"username\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"Please enter username\" },\n                        model: {\n                          value: _vm.ruleForm.username,\n                          callback: function($$v) {\n                            _vm.$set(_vm.ruleForm, \"username\", $$v)\n                          },\n                          expression: \"ruleForm.username\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"div\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: !_vm.isUploadAvatar,\n                          expression: \"!isUploadAvatar\"\n                        }\n                      ],\n                      staticClass: \"warning\"\n                    },\n                    [_vm._v(\"please upload avatar!\")]\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { staticClass: \"el-form-item-button\" },\n                    [\n                      _c(\n                        \"el-upload\",\n                        {\n                          ref: \"upload\",\n                          staticClass: \"upload-demo\",\n                          attrs: {\n                            action: \"http://localhost:8090/upload\",\n                            \"on-preview\": _vm.handlePreview,\n                            \"on-remove\": _vm.handleRemove,\n                            \"on-success\": _vm.handleAvatarSuccess,\n                            \"auto-upload\": true,\n                            click: _vm.submitUpload\n                          }\n                        },\n                        [\n                          _c(\n                            \"el-button\",\n                            {\n                              attrs: {\n                                slot: \"trigger\",\n                                size: \"small\",\n                                type: \"primary\"\n                              },\n                              slot: \"trigger\"\n                            },\n                            [_vm._v(\"select avatar\")]\n                          )\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-button\",\n                        {\n                          attrs: {\n                            type: \"primary\",\n                            disabled: !_vm.isUploadAvatar\n                          },\n                          on: {\n                            click: function($event) {\n                              return _vm.submitForm(\"ruleForm\")\n                            }\n                          }\n                        },\n                        [_vm._v(\"Sign up\")]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}