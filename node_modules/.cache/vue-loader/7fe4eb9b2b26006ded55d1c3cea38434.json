{"remainingRequest":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\src\\views\\BlogEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\src\\views\\BlogEdit.vue","mtime":1628334842440},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626597476611},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1626597517077},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626597476611},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1626597510143}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Header from \"../components/Header\";\nexport default {\n    name: \"BlogEdit\",\n    components: {Header},\n    data(){\n        return {\n            userId:null,\n            validateUser:false,\n            ruleForm: {\n                id:null,\n                title: '',\n                description: '',\n                content:''\n            },\n            rules: {\n                title: [\n                    { required: true, message: 'Please enter title.', trigger: 'blur' },\n                    { min: 5, message: 'Title length should be  3 to 35 bytes', trigger: 'blur' }\n                ],\n                description: [\n                    { required: true, message: 'Please enter description.', trigger: 'blur' },\n                    { min: 5, message: 'Description two short!! At least 5 bytes.', trigger: 'blur' }\n                ],\n                content: [\n                    { required: true, message: 'Please enter content.', trigger: 'blur' },\n                    { min: 5, message: 'Content two short!!At least 5 bytes.', trigger: 'blur' }\n                ],\n        }\n    }\n},  methods: {\n        submitForm(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    const _this = this\n                    this.$axios.post('/blog/edit', _this.ruleForm, {\n\n                        headers:{\n                            \"Authorization\":_this.$store.state.token\n                        }\n\n\n                    }).then(res => {\n                        this.$alert('commited', 'Callback', {\n                            confirmButtonText: 'OK',\n                            callback: action => {\n                                _this.$router.push(\"/blogs\")\n                            }\n                        });\n                    })\n\n                } else {\n                    console.log('error submit!!');\n                    return false;\n                }\n            });\n        },\n        resetForm(formName) {\n            this.$refs[formName].resetFields();\n        }\n    },\n    created() {\n        const _this = this\n        const blogId = this.$route.params.blogId\n        console.log(\"blogId:\"+blogId)\n        if (blogId) {\n            this.$axios.get('/blog/'+blogId).then(res => {\n                const blog = res.data.data\n                _this.ruleForm.id = blogId\n                _this.ruleForm.title = blog.title\n                _this.ruleForm.description = blog.description\n                _this.ruleForm.content = blog.content\n                _this.userId = blog.userId\n                if (_this.userId) {\n                    if (this.$store.state.userInfo.id === this.userId) {\n                        this.validateUser = false;\n                    } else {\n                        this.validateUser = true;\n                    }\n                }\n            })\n        }\n    }\n}\n",{"version":3,"sources":["BlogEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BlogEdit.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div>\r\n        <Header></Header>\r\n        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n            <el-form-item label=\"Title\" prop=\"title\">\r\n                <el-input v-model=\"ruleForm.title\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"Description\" prop=\"description\">\r\n                <el-input v-model=\"ruleForm.description\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"Content\" prop=\"content\">\r\n                <mavon-editor v-model=\"ruleForm.content\"></mavon-editor>\r\n            </el-form-item>\r\n            <el-form-item >\r\n                <el-button type=\"primary\" @click=\"submitForm('ruleForm')\" :disabled=\"validateUser\">commit</el-button>\r\n                <el-button @click=\"resetForm('ruleForm')\" :disabled=\"validateUser\">reset</el-button>\r\n                <span v-show=\"validateUser\" style=\"margin-left: 35px; color: red\">It's not your blogs. You don't have right to edit it.</span>\r\n            </el-form-item>\r\n        </el-form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Header from \"../components/Header\";\r\n    export default {\r\n        name: \"BlogEdit\",\r\n        components: {Header},\r\n        data(){\r\n            return {\r\n                userId:null,\r\n                validateUser:false,\r\n                ruleForm: {\r\n                    id:null,\r\n                    title: '',\r\n                    description: '',\r\n                    content:''\r\n                },\r\n                rules: {\r\n                    title: [\r\n                        { required: true, message: 'Please enter title.', trigger: 'blur' },\r\n                        { min: 5, message: 'Title length should be  3 to 35 bytes', trigger: 'blur' }\r\n                    ],\r\n                    description: [\r\n                        { required: true, message: 'Please enter description.', trigger: 'blur' },\r\n                        { min: 5, message: 'Description two short!! At least 5 bytes.', trigger: 'blur' }\r\n                    ],\r\n                    content: [\r\n                        { required: true, message: 'Please enter content.', trigger: 'blur' },\r\n                        { min: 5, message: 'Content two short!!At least 5 bytes.', trigger: 'blur' }\r\n                    ],\r\n            }\r\n        }\r\n    },  methods: {\r\n            submitForm(formName) {\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        const _this = this\r\n                        this.$axios.post('/blog/edit', _this.ruleForm, {\r\n\r\n                            headers:{\r\n                                \"Authorization\":_this.$store.state.token\r\n                            }\r\n\r\n\r\n                        }).then(res => {\r\n                            this.$alert('commited', 'Callback', {\r\n                                confirmButtonText: 'OK',\r\n                                callback: action => {\r\n                                    _this.$router.push(\"/blogs\")\r\n                                }\r\n                            });\r\n                        })\r\n\r\n                    } else {\r\n                        console.log('error submit!!');\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n            resetForm(formName) {\r\n                this.$refs[formName].resetFields();\r\n            }\r\n        },\r\n        created() {\r\n            const _this = this\r\n            const blogId = this.$route.params.blogId\r\n            console.log(\"blogId:\"+blogId)\r\n            if (blogId) {\r\n                this.$axios.get('/blog/'+blogId).then(res => {\r\n                    const blog = res.data.data\r\n                    _this.ruleForm.id = blogId\r\n                    _this.ruleForm.title = blog.title\r\n                    _this.ruleForm.description = blog.description\r\n                    _this.ruleForm.content = blog.content\r\n                    _this.userId = blog.userId\r\n                    if (_this.userId) {\r\n                        if (this.$store.state.userInfo.id === this.userId) {\r\n                            this.validateUser = false;\r\n                        } else {\r\n                            this.validateUser = true;\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}