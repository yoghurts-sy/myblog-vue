{"remainingRequest":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\src\\views\\BlogDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\src\\views\\BlogDetail.vue","mtime":1629020033875},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626597476611},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1626597517077},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626597476611},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1626597510143}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Header from \"../components/Header\";\nimport 'github-markdown-css/github-markdown.css';\n\nexport default {\n    name: \"BlogDetail\",\n    components: {Header},\n    data() {\n        return {\n            blog: {\n                userId:null,\n                title:'',\n                description:'',\n                content:'',\n                blogId: null\n            },\n            validateUser:false\n        }\n    },\n    created() {\n        const _this = this\n        const blogId = this.$route.params.blogId\n        this.blog.blogId = blogId\n\n        this.$axios.get('/blog/' + blogId).then(res => {\n            let blog = res.data.data\n            _this.blog.userId = blog.userId\n            _this.blog.title = blog.title\n            _this.blog.description = blog.description\n\n            let MarkdownIt = require(\"markdown-it\")\n            let md = new MarkdownIt()\n            let result = md.render(blog.content);\n            _this.blog.content = result\n\n            if (_this.$store.state.userInfo.id) {\n                if (_this.$store.state.userInfo.id === _this.blog.userId) {\n                    _this.validateUser = true\n                } else {\n                    _this.validateUser = false\n                }\n            }\n        })\n    },\n    methods: {\n        downloadMd() {\n            let _this = this\n            console.log(_this.blog.title)\n            let URL = \"/api/md/download\"\n            this.$axios.post(URL,{\n                    \"id\": _this.blog.blogId,\n                    \"title\":_this.blog.title\n                },{\n                    headers:{\n                        \"Authorization\": _this.$store.state.token\n                    },\n                    responseType:'blob',\n            }\n            ).then(res=>{\n                let blob = new Blob([res.data], {type: res.data.type})\n                let href = window.URL.createObjectURL(blob);\n                console.log(href)\n                const a = document.createElement('a')\n\n                a.setAttribute('href', href)\n                a.setAttribute('download', \"name\")\n               /* a.setAttribute('target', '_blank')*/\n\n                document.body.appendChild(a);\n                a.click(); //点击下载\n                document.body.removeChild(a); //下载完成移除元素\n                window.URL.revokeObjectURL(href); //释放blob\n            })\n        }\n    }\n}\n",{"version":3,"sources":["BlogDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BlogDetail.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div>\r\n        <Header></Header>\r\n        <div class=\"m-markdown-body\">\r\n            <h2>{{ blog.title }}</h2>\r\n            <el-link icon=\"el-icon-edit\" v-show=\"validateUser\" href=\"\">\r\n                <router-link :to=\"{name:'BlogEdit', params:{blogId: blog.blogId}}\">\r\n                    编辑\r\n                </router-link>\r\n            </el-link>\r\n            <el-link icon=\"el-icon-download\" style=\"margin-left:10px\" @click=\"downloadMd\" v-show=\"validateUser\">\r\n                 导出Markdown\r\n            </el-link>\r\n            <el-divider></el-divider>\r\n            <div class=\"markdown-body\" v-html=\"blog.content\"></div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Header from \"../components/Header\";\r\n    import 'github-markdown-css/github-markdown.css';\r\n\r\n    export default {\r\n        name: \"BlogDetail\",\r\n        components: {Header},\r\n        data() {\r\n            return {\r\n                blog: {\r\n                    userId:null,\r\n                    title:'',\r\n                    description:'',\r\n                    content:'',\r\n                    blogId: null\r\n                },\r\n                validateUser:false\r\n            }\r\n        },\r\n        created() {\r\n            const _this = this\r\n            const blogId = this.$route.params.blogId\r\n            this.blog.blogId = blogId\r\n\r\n            this.$axios.get('/blog/' + blogId).then(res => {\r\n                let blog = res.data.data\r\n                _this.blog.userId = blog.userId\r\n                _this.blog.title = blog.title\r\n                _this.blog.description = blog.description\r\n\r\n                let MarkdownIt = require(\"markdown-it\")\r\n                let md = new MarkdownIt()\r\n                let result = md.render(blog.content);\r\n                _this.blog.content = result\r\n\r\n                if (_this.$store.state.userInfo.id) {\r\n                    if (_this.$store.state.userInfo.id === _this.blog.userId) {\r\n                        _this.validateUser = true\r\n                    } else {\r\n                        _this.validateUser = false\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        methods: {\r\n            downloadMd() {\r\n                let _this = this\r\n                console.log(_this.blog.title)\r\n                let URL = \"/api/md/download\"\r\n                this.$axios.post(URL,{\r\n                        \"id\": _this.blog.blogId,\r\n                        \"title\":_this.blog.title\r\n                    },{\r\n                        headers:{\r\n                            \"Authorization\": _this.$store.state.token\r\n                        },\r\n                        responseType:'blob',\r\n                }\r\n                ).then(res=>{\r\n                    let blob = new Blob([res.data], {type: res.data.type})\r\n                    let href = window.URL.createObjectURL(blob);\r\n                    console.log(href)\r\n                    const a = document.createElement('a')\r\n\r\n                    a.setAttribute('href', href)\r\n                    a.setAttribute('download', \"name\")\r\n                   /* a.setAttribute('target', '_blank')*/\r\n\r\n                    document.body.appendChild(a);\r\n                    a.click(); //点击下载\r\n                    document.body.removeChild(a); //下载完成移除元素\r\n                    window.URL.revokeObjectURL(href); //释放blob\r\n                })\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .m-markdown-body {\r\n        box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n        width: 100%;\r\n        padding: 20px 15px;\r\n    }\r\n</style>"]}]}