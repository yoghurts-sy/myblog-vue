{"remainingRequest":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\src\\views\\BlogEdit.vue?vue&type=style&index=0&id=25b085f4&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\src\\views\\BlogEdit.vue","mtime":1629191779803},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\css-loader\\index.js","mtime":1626597449886},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1626597510214},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1626597515922},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626597476611},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1626597510143}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.upload-demo {\n}\n.save-successful {\n    margin-left: 15px;\n    margin-top: 2px;\n}\n\n",{"version":3,"sources":["BlogEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2KA;AACA;AACA;AACA;AACA;AACA","file":"BlogEdit.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div>\r\n        <Header></Header>\r\n        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n            <el-form-item label=\"标题\" prop=\"title\">\r\n                <el-input v-model=\"ruleForm.title\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"描述\" prop=\"description\">\r\n                <el-input v-model=\"ruleForm.description\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"内容\" prop=\"content\">\r\n                    <el-upload\r\n                        class=\"upload-demo\"\r\n                        action=\"http://localhost:8090/api/md/convert2String\"\r\n                        :on-preview=\"handlePreview\"\r\n                        :on-remove=\"handleRemove\"\r\n                        :on-success=\"uploadMdSuccess\"\r\n                        :auto-upload=\"true\">\r\n                    <el-link icon=\"el-icon-document\"\r\n                             :disabled=\"validateUser\"\r\n                             slot=\"trigger\"\r\n                    >上传本地Markdown</el-link>\r\n                        <el-link\r\n                                type=\"success\" class=\"save-successful\" v-loading=\"saving\" element-loading-spinner=\"el-icon-loading\"\r\n                                icon=\"el-icon-success\"\r\n                        >已自动保存</el-link>\r\n                </el-upload>\r\n\r\n                <mavon-editor ref=md v-model=\"ruleForm.content\" @imgAdd=\"imgAdd\" @imgDel=\"imgDel\"\r\n                    @change=\"changeContent\"\r\n                ></mavon-editor>\r\n            </el-form-item>\r\n            <el-form-item >\r\n                <el-button type=\"primary\" @click=\"submitForm('ruleForm')\" :disabled=\"validateUser\">保存</el-button>\r\n                <el-button @click=\"resetForm('ruleForm')\" :disabled=\"validateUser\">重置</el-button>\r\n                <span v-show=\"validateUser\" style=\"margin-left: 35px; color: red\">It's not your blogs. You don't have right to edit it.</span>\r\n            </el-form-item>\r\n        </el-form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Header from \"../components/Header\";\r\n    export default {\r\n        name: \"BlogEdit\",\r\n        components: {Header},\r\n        data(){\r\n            return {\r\n                saving:true,\r\n                preContent:'',\r\n                userId:null,\r\n                validateUser:false,\r\n                ruleForm: {\r\n                    id:null,\r\n                    title: '',\r\n                    description: '',\r\n                    content:''\r\n                },\r\n                rules: {\r\n                    title: [\r\n                        { required: true, message: 'Please enter title.', trigger: 'blur' },\r\n                        { min: 5, message: 'Title length should be  3 to 35 bytes', trigger: 'blur' }\r\n                    ],\r\n                    description: [\r\n                        { required: true, message: 'Please enter description.', trigger: 'blur' },\r\n                        { min: 5, message: 'Description two short!! At least 5 bytes.', trigger: 'blur' }\r\n                    ],\r\n                    content: [\r\n                        { required: true, message: 'Please enter content.', trigger: 'blur' },\r\n                        { min: 5, message: 'Content two short!!At least 5 bytes.', trigger: 'blur' }\r\n                    ],\r\n            }\r\n        }\r\n    },  methods: {\r\n            submitForm(formName) {\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        const _this = this\r\n                        this.$axios.post('/blog/edit', _this.ruleForm, {\r\n                            headers:{\r\n                                \"Authorization\":_this.$store.state.token\r\n                            }\r\n                        }).then(res => {\r\n                            this.$alert('保存成功！', '提示', {\r\n                                confirmButtonText: 'OK',\r\n                                callback: action => {\r\n                                    _this.$router.push(\"/blogs\")\r\n                                }\r\n                            });\r\n                        })\r\n\r\n                    } else {\r\n                        console.log('error submit!!');\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n            resetForm(formName) {\r\n                this.$refs[formName].resetFields();\r\n            },\r\n            imgAdd(pos, $file){\r\n                // 第一步.将图片上传到服务器.\r\n                var formdata = new FormData()\r\n                formdata.append('file', $file)\r\n                let _this = this\r\n                this.$axios({\r\n                    url: 'api/md/upload',\r\n                    method: 'post',\r\n                    data: formdata,\r\n                    headers: { 'Content-Type': 'multipart/form-data' },\r\n                }).then((res) => {\r\n                    // 第二步.将返回的url替换到文本原位置![...](0) -> ![...](url)\r\n                    console.log(\"res:\"+res.data)\r\n                    let url = res.data.data\r\n                    _this.$refs.md.$imglst2Url([[pos, url]])\r\n                })\r\n            },\r\n            imgDel(pos) {\r\n\r\n            },\r\n            changeContent(value, render) {\r\n                this.saving = true;\r\n                let _this = this;\r\n                if (value !== this.preContent) {\r\n                    this.preContent = value\r\n                    this.$axios.post('/blog/edit', _this.ruleForm, {\r\n                        headers:{\r\n                            \"Authorization\":_this.$store.state.token\r\n                        }\r\n                    }).then(res => {\r\n                        _this.saving = false\r\n                    })\r\n                }\r\n                //自动保存\r\n            },\r\n            uploadMdSuccess(res) {\r\n                this.preContent = this.ruleForm.content\r\n                this.ruleForm.content = res.data\r\n            },\r\n            handlePreview() {\r\n\r\n            },\r\n            handleRemove() {\r\n                this.ruleForm.content = this.preContent\r\n            }\r\n        },\r\n        created() {\r\n            const _this = this\r\n            const blogId = this.$route.params.blogId\r\n            if (blogId) {\r\n                this.$axios.get('/blog/'+blogId).then(res => {\r\n                    const blog = res.data.data\r\n                    _this.ruleForm.id = blogId\r\n                    _this.ruleForm.title = blog.title\r\n                    _this.ruleForm.description = blog.description\r\n                    _this.ruleForm.content = blog.content\r\n                    _this.userId = blog.userId\r\n                    if (_this.userId) {\r\n                        if (this.$store.state.userInfo.id === this.userId) {\r\n                            this.validateUser = false;\r\n                        } else {\r\n                            this.validateUser = true;\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .upload-demo {\r\n    }\r\n    .save-successful {\r\n        margin-left: 15px;\r\n        margin-top: 2px;\r\n    }\r\n\r\n</style>"]}]}