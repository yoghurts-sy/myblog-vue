{"remainingRequest":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\src\\views\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\src\\views\\Register.vue","mtime":1628930332595},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626597476611},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1626597517077},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626597476611},{"path":"C:\\Users\\yoghurts\\IdeaProjects\\Projects\\myblog-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1626597510143}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    data() {\n        var validatePass2 = (rule, value, callback) => {\n            console.log(value)\n            console.log(this.ruleForm.password)\n            if (value === '') {\n                callback(new Error('请再次输入密码'))\n            } else if (value !== this.ruleForm.password) {\n                callback(new Error('两次输入密码不一致!'))\n            } else {\n                callback()\n            }\n        }\n        return {\n            isUploadAvatar:false,\n            ruleForm: {\n                username: '',\n                password: '',\n                rePassword:'',\n                email: '',\n                avatar: ''\n            },\n            rules: {\n                username: [\n                    { required: true, message: 'Please enter Username', trigger: 'blur' },\n                    { min: 3, max: 15, message: 'Length should be 3 to 15 bytes', trigger: 'blur' }\n                ],\n                password: [\n                    { required: true, message: 'Please enter Password', trigger: 'blur' },\n                    /*{ min: 6, max: 15, message: 'Length should be 3 to 15 bytes', trigger: 'blur' }*/\n                    { pattern: /^(?![a-zA-Z]+$)(?![A-Z0-9]+$)(?![A-Z\\W_]+$)(?![a-z0-9]+$)(?![a-z\\W_]+$)(?![0-9\\W_]+$)[a-zA-Z0-9\\W_]{8,30}$/, message: '密码为数字、大小写字母和特殊符号至少包含三种，长度为8-30位' }\n                ],\n                email: [\n                    { required: true, message: 'Please enter Email', trigger: 'blur' },\n                    { pattern:/^([a-zA-Z]|[0-9])(\\w|\\-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/, message: 'email wrong pattern'}\n                ],\n                rePassword: [\n                    { required: true, validator: validatePass2, trigger: 'blur' }\n                ]\n            },\n            fileList: [\n                {\n                    name: '',\n                    url: ''\n                }\n            ]\n        }\n    },\n    methods:{\n        submitForm(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    let _this = this;\n                    this.$axios.post('/register', this.ruleForm).then(res => {\n\n                        const jwt = res.headers['authorization']\n                        const userInfo = res.data.data;\n                        console.log(userInfo);\n                        console.log(jwt);\n\n                        console.log(\"----------------\")\n                        _this.$store.commit(\"SET_TOKEN\", jwt)\n                        _this.$store.commit(\"SET_USERINFO\", userInfo)\n                        console.log(_this.$store.state.userInfo)\n                        console.log(_this.$store.state.token)\n                        _this.$router.push(\"/blogs\")\n\n                        console.log(res)\n                    })\n                } else {\n                    console.log('error submit!!');\n                    return false;\n                }\n            });\n        },\n        submitUpload() {\n            console.log(\"submit!\")\n        },\n        handleRemove(file, fileList) {\n            console.log(file, fileList);\n            this.ruleForm.avatar = ''\n        },\n        handlePreview(file) {\n            console.log(file);\n        },\n        handleAvatarSuccess(res) {\n            console.log(res)\n            this.ruleForm.avatar = res.data\n            this.isUploadAvatar = true\n        }\n    }\n\n}\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div>\r\n        <el-container>\r\n            <el-header>\r\n                <img src=\"../assets/login-head.png\" class=\"login-head\">\r\n            </el-header>\r\n            <el-main class=\"m-container\">\r\n                <div class=\"login-header\">\r\n                    <el-avatar icon=\"el-icon-user-solid\" :size=\"50\" :src='ruleForm.avatar'></el-avatar>\r\n                    <!--<div class=\"login-head-div\">Sign up to Yoghurt.</div>-->\r\n                    <span class=\"login-head-div\">Sign up to Yoghurt.</span>\r\n                </div>\r\n                <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n                    <el-form-item label=\"Email\" prop=\"email\">\r\n                        <el-input type=\"email\" v-model=\"ruleForm.email\" placeholder=\"Email will be your AccountID\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"Password\" prop=\"password\">\r\n                        <el-input type=\"password\" v-model=\"ruleForm.password\" placeholder=\"Please enter password\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"RePassword\" prop=\"rePassword\">\r\n                        <el-input type=\"password\" v-model=\"ruleForm.rePassword\" placeholder=\"Please enter password again\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"Username\" prop=\"username\">\r\n                        <el-input v-model=\"ruleForm.username\" placeholder=\"Please enter username\"></el-input>\r\n                    </el-form-item>\r\n                    <div class=\"warning\" v-show=\"!isUploadAvatar\">please upload avatar!</div>\r\n                    <el-form-item class=\"el-form-item-button\">\r\n                        <el-upload\r\n                                class=\"upload-demo\"\r\n                                ref=\"upload\"\r\n                                action=\"http://localhost:8090/upload\"\r\n                                :on-preview=\"handlePreview\"\r\n                                :on-remove=\"handleRemove\"\r\n                                :on-success=\"handleAvatarSuccess\"\r\n                                :auto-upload=\"true\"\r\n                                :click=\"submitUpload\"\r\n                        ><el-button slot=\"trigger\" size=\"small\" type=\"primary\">select avatar</el-button></el-upload>\r\n                        <!--<el-button @click=\"uploadAvatar\">uploadAvatar</el-button>-->\r\n                        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\" :disabled=\"!isUploadAvatar\">Sign up</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </el-main>\r\n        </el-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            var validatePass2 = (rule, value, callback) => {\r\n                console.log(value)\r\n                console.log(this.ruleForm.password)\r\n                if (value === '') {\r\n                    callback(new Error('请再次输入密码'))\r\n                } else if (value !== this.ruleForm.password) {\r\n                    callback(new Error('两次输入密码不一致!'))\r\n                } else {\r\n                    callback()\r\n                }\r\n            }\r\n            return {\r\n                isUploadAvatar:false,\r\n                ruleForm: {\r\n                    username: '',\r\n                    password: '',\r\n                    rePassword:'',\r\n                    email: '',\r\n                    avatar: ''\r\n                },\r\n                rules: {\r\n                    username: [\r\n                        { required: true, message: 'Please enter Username', trigger: 'blur' },\r\n                        { min: 3, max: 15, message: 'Length should be 3 to 15 bytes', trigger: 'blur' }\r\n                    ],\r\n                    password: [\r\n                        { required: true, message: 'Please enter Password', trigger: 'blur' },\r\n                        /*{ min: 6, max: 15, message: 'Length should be 3 to 15 bytes', trigger: 'blur' }*/\r\n                        { pattern: /^(?![a-zA-Z]+$)(?![A-Z0-9]+$)(?![A-Z\\W_]+$)(?![a-z0-9]+$)(?![a-z\\W_]+$)(?![0-9\\W_]+$)[a-zA-Z0-9\\W_]{8,30}$/, message: '密码为数字、大小写字母和特殊符号至少包含三种，长度为8-30位' }\r\n                    ],\r\n                    email: [\r\n                        { required: true, message: 'Please enter Email', trigger: 'blur' },\r\n                        { pattern:/^([a-zA-Z]|[0-9])(\\w|\\-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/, message: 'email wrong pattern'}\r\n                    ],\r\n                    rePassword: [\r\n                        { required: true, validator: validatePass2, trigger: 'blur' }\r\n                    ]\r\n                },\r\n                fileList: [\r\n                    {\r\n                        name: '',\r\n                        url: ''\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        methods:{\r\n            submitForm(formName) {\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        let _this = this;\r\n                        this.$axios.post('/register', this.ruleForm).then(res => {\r\n\r\n                            const jwt = res.headers['authorization']\r\n                            const userInfo = res.data.data;\r\n                            console.log(userInfo);\r\n                            console.log(jwt);\r\n\r\n                            console.log(\"----------------\")\r\n                            _this.$store.commit(\"SET_TOKEN\", jwt)\r\n                            _this.$store.commit(\"SET_USERINFO\", userInfo)\r\n                            console.log(_this.$store.state.userInfo)\r\n                            console.log(_this.$store.state.token)\r\n                            _this.$router.push(\"/blogs\")\r\n\r\n                            console.log(res)\r\n                        })\r\n                    } else {\r\n                        console.log('error submit!!');\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n            submitUpload() {\r\n                console.log(\"submit!\")\r\n            },\r\n            handleRemove(file, fileList) {\r\n                console.log(file, fileList);\r\n                this.ruleForm.avatar = ''\r\n            },\r\n            handlePreview(file) {\r\n                console.log(file);\r\n            },\r\n            handleAvatarSuccess(res) {\r\n                console.log(res)\r\n                this.ruleForm.avatar = res.data\r\n                this.isUploadAvatar = true\r\n            }\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .m-container {\r\n        text-align: center;\r\n        max-width: 960px;\r\n    }\r\n\r\n    .el-header {\r\n        background-color: white;\r\n        color: white;\r\n        text-align: center;\r\n        line-height: 60px;\r\n        height: 200px;\r\n    }\r\n    .el-main {\r\n        background-color: white;\r\n        color: #333;\r\n        text-align: center;\r\n        width: 500px;\r\n        margin: 0 auto;\r\n        /*line-height: 160px;*/\r\n    }\r\n\r\n    demo-ruleForm > el-form-item-button {\r\n        margin-left: -10px;\r\n    }\r\n\r\n\r\n    .login-head {\r\n        height: 100%;\r\n    }\r\n\r\n    .login-header {\r\n        color: black;\r\n        height: 50px;\r\n        margin-bottom: 10px;\r\n    }\r\n    .login-head-div {\r\n        height: 100%;\r\n        font-size: large;\r\n        font-weight: bold;\r\n        font-style:oblique;\r\n        margin-left: 20px;\r\n    }\r\n    .warning {\r\n        color: red;\r\n        font-size: medium;\r\n        font-style: oblique;\r\n        margin-top: -10px;\r\n        margin-bottom: 10px;\r\n        margin-left: 70px;\r\n    }\r\n</style>"]}]}